#!/bin/env bash

# Colors
red='\033[0;31m'
# green='\033[0;32m'
# blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'
yellow='\033[0;33m'
clear='\033[0m'

export XDG_CONFIG_HOME="${HOME}/.config"

export HAS_APT=false
export HAS_BAT=false
export HAS_BREW=false
export HAS_DYFF=false
export HAS_HUB=false
export HAS_GH=false
export HAS_NVIM=false
export HAS_OP=false
export HAS_TERRAFORM=false
export HAS_VIM=false
export HAS_VIRTUALENV=false
export HAS_YUM=false
export HAS_ZPLUG=false
export IS_DOCKER=false
export IS_LINUX=false
export IS_MAC=false

if [[ -f "/.dockerenv" ]]; then
  export IS_DOCKER=true
fi

_UNAME="$(uname)"
if [[ ${_UNAME} == 'Linux' ]]; then
  export IS_LINUX=true
  platform="linux"
  _version="$(cat /proc/version)"
  if echo "${_version}" | grep -q arch; then
    export DISTRO="arch"
  elif echo "${_version}" | grep -q Ubuntu; then
    export DISTRO="ubuntu"
  fi
elif [[ ${_UNAME} == 'Darwin' ]]; then
  export IS_MAC=true
  platform="darwin"
fi

[[ -x "$(command -v apt-get)" ]] && export HAS_APT=true
[[ -x "$(command -v bat)" ]] && export HAS_BAT=true
[[ -x "$(command -v brew)" ]] && export HAS_BREW=true
[[ -x "$(command -v dyff)" ]] && export HAS_DYFF=true
[[ -x "$(command -v hub)" ]] && export HAS_HUB=true
[[ -x "$(command -v nvim)" ]] && export HAS_GH=true
[[ -x "$(command -v nvim)" ]] && export HAS_NVIM=true
[[ -x "$(command -v op)" ]] && export HAS_OP=true
[[ -x "$(command -v terraform)" ]] && export HAS_TERRAFORM=true
[[ -x "$(command -v vim)" ]] && export HAS_VIM=true
[[ -x "$(command -v virtualenv)" ]] && export HAS_VIRTUALENV=true
[[ -x "$(command -v yum)" ]] && export HAS_YUM=true
[[ -x "$(command -v zplug)" ]] && export HAS_ZPLUG=true

function print_err() { printf "\n${red}ðŸ’¥ %s${clear}\n\n" "${@}"; }
function print_info() { printf "\n${yellow}âš¡ ${magenta}%s${clear}\n\n" "${@}"; }
function print_success() { printf "\n${cyan}ðŸŽ‰ %s${clear}\n\n" "${@}"; }
function print_warn() { printf "\n${yellow}âš   %s${clear}\n\n" "${@}"; }
function setenv() { export "$1=$2"; }

if [[ -f "${HOME}/.setenv" ]]; then
  source "${HOME}/.setenv"
else
  print_err "${HOME}/.setenv"
fi

export PATH="${AQUA_ROOT_DIR}:${PATH}"     # aqua
export PATH="${AQUA_ROOT_DIR}/bin:${PATH}" # aqua bins
export PATH="${HOME}/bin:${PATH}"
export PATH="${HOME}/.local/bin:${PATH}"

case "${platform}" in
darwin)

  PATH="$(brew --prefix coreutils)/libexec/gnubin:${HOME}/bin:${PATH}"
  export PATH="${PATH}"

  _BREW_REPO="$(/usr/local/bin/brew --repository)"
  if [[ -f "${_BREW_REPO}/Library/Contributions/brew_bash_completion.sh" ]]; then
    # shellcheck disable=SC1091
    source "${_BREW_REPO}/usr/local/bin/brew --repository)/Library/Contributions/brew_bash_completion.sh"
  fi

  _BREW_PREFIX="$(brew --prefix)"
  if [[ -f "${_BREW_PREFIX}/etc/bash_completion.d/vagrant" ]]; then
    # shellcheck disable=SC1091
    source "${_BREW_PREFIX}/etc/bash_completion.d/vagrant"
  fi
  if [[ -f "${_BREW_PREFIX}/etc/bash_completion.d/packer" ]]; then
    # shellcheck disable=SC1091
    source "${_BREW_PREFIX}/etc/bash_completion.d/packer"
  fi
  ;;

linux)

  [[ -d /media/vm/vagrant.d ]] && export VAGRANT_HOME=/media/vm/vagrant.d
  ;;

*)

  print_warn "Platform '${platform}' not in .bashrc"
  ;;

esac

[[ -f ~/.bash_aliases ]] && . "${HOME}/.bash_aliases"

if ${HAS_TERRAFORM}; then
  complete -o nospace -C "$(command -v terraform)" terraform
fi
